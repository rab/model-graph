<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>Module: ModelGraph</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
  <meta http-equiv="Content-Script-Type" content="text/javascript" />
  <link rel="stylesheet" href=".././rdoc-style.css" type="text/css" media="screen" />
  <script type="text/javascript">
  // <![CDATA[

  function popupCode( url ) {
    window.open(url, "Code", "resizable=yes,scrollbars=yes,toolbar=no,status=no,height=150,width=400")
  }

  function toggleCode( id ) {
    if ( document.getElementById )
      elem = document.getElementById( id );
    else if ( document.all )
      elem = eval( "document.all." + id );
    else
      return false;

    elemStyle = elem.style;
    
    if ( elemStyle.display != "block" ) {
      elemStyle.display = "block"
    } else {
      elemStyle.display = "none"
    }

    return true;
  }
  
  // Make codeblocks hidden by default
  document.writeln( "<style type=\"text/css\">div.method-source-code { display: none }</style>" )
  
  // ]]>
  </script>

</head>
<body>



    <div id="classHeader">
        <table class="header-table">
        <tr class="top-aligned-row">
          <td><strong>Module</strong></td>
          <td class="class-name-in-header">ModelGraph</td>
        </tr>
        <tr class="top-aligned-row">
            <td><strong>In:</strong></td>
            <td>
                <a href="../files/model_graph_rb.html">
                model_graph.rb
                </a>
        <br />
            </td>
        </tr>

        </table>
    </div>
  <!-- banner header -->

  <div id="bodyContent">



  <div id="contextContent">



   </div>

    <div id="method-list">
      <h3 class="section-bar">Methods</h3>

      <div class="name-list">
      <a href="#M000002">do_graph</a>&nbsp;&nbsp;
      <a href="#M000001">posers</a>&nbsp;&nbsp;
      </div>
    </div>

  </div>


    <!-- if includes -->

    <div id="section">

    <div id="class-list">
      <h3 class="section-bar">Classes and Modules</h3>

      Class <a href="ModelGraph/Graph.html" class="link">ModelGraph::Graph</a><br />

    </div>

    <div id="constants-list">
      <h3 class="section-bar">Constants</h3>

      <div class="name-list">
        <table summary="Constants">
        <tr class="top-aligned-row context-row">
          <td class="context-item-name">ARROW_FOR</td>
          <td>=</td>
          <td class="context-item-value">{     :belongs_to =&gt; 'tee',     :has_many   =&gt; 'crowodot',     :has_one    =&gt; 'odottee',     :has_and_belongs_to_many =&gt; 'crowodot'</td>
          <td width="3em">&nbsp;</td>
          <td class="context-item-desc">
Should :belongs_to differ when paired with :has_one versus :has_many?

<p>
Should :has_one be &#8216;teetee&#8217; if required? (i.e., not null)
</p>
</td>
        </tr>
        </table>
      </div>
    </div>



      


    <!-- if method_list -->
    <div id="methods">
      <h3 class="section-bar">Public Class methods</h3>

      <div id="method-M000002" class="method-detail">
        <a name="M000002"></a>

        <div class="method-heading">
          <a href="#M000002" class="method-signature">
          <span class="method-name">do_graph</span><span class="method-args">(options)</span>
          </a>
        </div>
      
        <div class="method-description">
          <p>
Examines the models and constructs a DOT formatted graph description based
on the ActiveRecord associations that are discovered.
</p>
<p>
If called with:
</p>
<pre>
 rake model_graph EDGES=Author-Book
</pre>
<p>
will cause an edge between, for example, Author and Book which can alter
the relative hierarchical rank of the two nodes (placing the first above
the second). This can often make a dramatic improvement in the overall
layout of the graph. Unless overridden with a normally discovered edge, the
plain arrow will be used to connect the two nodes (so a misspelt node is
more easily detected). Additional edges can be separated by &#8217;/&#8217;
as in <tt>EDGES=Author-Book/Book-Chapter</tt>
</p>
<p>
If called with:
</p>
<pre>
 rake model_graph NODES=Author
</pre>
<p>
will cause a node to be placed into the output early. This tends to make a
node appear further to the left in the resulting graph and can be used to
improve the overall layout. Typically, nodes are not specified, but are
left to be positioned based on their edges with other nodes. Additional
nodes can be separated by &#8217;/&#8217; as in <tt>NODES=Author/Book</tt>.
</p>
<h5>Options</h5>
<table>
<tr><td valign="top"><tt>NAME</tt>:</td><td>Change the name of the file into which the graph is written and the
internal name that is assigned.

</td></tr>
<tr><td valign="top"><tt>DEBUG</tt>:</td><td>When set to <em>any</em> value, causes comments describing the ActiveRecord
models to be included in the DOT output.

</td></tr>
<tr><td valign="top"><tt>EDGES</tt>:</td><td>With a value of <tt>N1-N2</tt> [<em>/N3-N4</em>&#8230;] adds a relationship
between <tt>N1</tt> and <tt>N2</tt> (and <tt>N3</tt> and <tt>N4</tt>, etc.)
as described above.

</td></tr>
<tr><td valign="top"><tt>NODES</tt>:</td><td>Adds extra <tt>nodes</tt> early in the DOT output to influence placement.

</td></tr>
<tr><td valign="top"><tt>TEST</tt>:</td><td>Graphs an internal set of model classes rather than what&#8217;s in
<tt>app/models/*.rb</tt>

</td></tr>
<tr><td valign="top"><tt>SHAPE</tt>:</td><td>Changes the default shape of the nodes in the graph (any [valid DOT <a
href="http://www.graphviz.org/doc/info/shapes.html">value}</a> is
acceptable, try <tt>rectangle</tt>)

</td></tr>
</table>
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000002-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000002-source">
<pre>
     <span class="ruby-comment cmt"># File model_graph.rb, line 231</span>
231:   <span class="ruby-keyword kw">def</span> <span class="ruby-keyword kw">self</span>.<span class="ruby-identifier">do_graph</span>(<span class="ruby-identifier">options</span>)
232:     <span class="ruby-identifier">output</span> = <span class="ruby-value str">&quot;&quot;</span>
233:     <span class="ruby-identifier">graph</span> = <span class="ruby-constant">Graph</span>.<span class="ruby-identifier">new</span>(<span class="ruby-identifier">options</span>.<span class="ruby-identifier">name</span>)
234: 
235:     <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">options</span>.<span class="ruby-identifier">edges</span>
236:       <span class="ruby-identifier">options</span>.<span class="ruby-identifier">edges</span>.<span class="ruby-identifier">scan</span>(<span class="ruby-regexp re">%r{(\w+)-(\w+)/?}</span>) <span class="ruby-keyword kw">do</span> <span class="ruby-operator">|</span><span class="ruby-identifier">f</span>,<span class="ruby-identifier">t</span><span class="ruby-operator">|</span>
237:         <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">add_edge</span>(<span class="ruby-identifier">f</span>, <span class="ruby-identifier">t</span>, <span class="ruby-value str">'style'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'solid'</span>)
238:       <span class="ruby-keyword kw">end</span>
239:     <span class="ruby-keyword kw">end</span>
240: 
241:     <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">options</span>.<span class="ruby-identifier">nodes</span>
242:       <span class="ruby-identifier">options</span>.<span class="ruby-identifier">nodes</span>.<span class="ruby-identifier">scan</span>(<span class="ruby-regexp re">%r{(\w+)/?}</span>) <span class="ruby-keyword kw">do</span> <span class="ruby-operator">|</span><span class="ruby-identifier">n</span><span class="ruby-operator">|</span>
243:         <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">add_node</span>(<span class="ruby-identifier">n</span>)
244:       <span class="ruby-keyword kw">end</span>
245:     <span class="ruby-keyword kw">end</span>
246: 
247:     <span class="ruby-identifier">version</span> = <span class="ruby-constant">ActiveRecord</span><span class="ruby-operator">::</span><span class="ruby-constant">Migrator</span>.<span class="ruby-identifier">current_version</span>
248:     <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">version</span> <span class="ruby-operator">&gt;</span> <span class="ruby-value">0</span>
249:       <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot;// Schema version: #{version}\n&quot;</span>
250:     <span class="ruby-keyword kw">end</span>
251: 
252:     <span class="ruby-comment cmt"># except that I'm spitting out the debugging, this could certainly go right</span>
253:     <span class="ruby-comment cmt"># before the Graph.edges part:</span>
254:     <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot;digraph #{graph.name} {\n&quot;</span>
255:     <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot;  graph [overlap=scale, nodesep=0.5, ranksep=0.5, separation=0.25]\n&quot;</span>
256:     <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot;  node  [shape=#{ENV['SHAPE'].downcase}]\n&quot;</span> <span class="ruby-keyword kw">unless</span> <span class="ruby-constant">ENV</span>[<span class="ruby-value str">'SHAPE'</span>].<span class="ruby-identifier">nil?</span>
257: 
258:     <span class="ruby-identifier">nodes</span> = <span class="ruby-constant">Hash</span>.<span class="ruby-identifier">new</span> { <span class="ruby-operator">|</span><span class="ruby-identifier">h</span>,<span class="ruby-identifier">k</span><span class="ruby-operator">|</span> <span class="ruby-identifier">h</span>[<span class="ruby-identifier">k</span>] = <span class="ruby-constant">Hash</span>.<span class="ruby-identifier">new</span> }
259: 
260:     <span class="ruby-keyword kw">for</span> <span class="ruby-identifier">klass</span> <span class="ruby-keyword kw">in</span> <span class="ruby-constant">ActiveRecord</span><span class="ruby-operator">::</span><span class="ruby-constant">Base</span>.<span class="ruby-identifier">send</span>(<span class="ruby-identifier">:subclasses</span>)
261:       <span class="ruby-comment cmt"># unless klass.name =~ /::/</span>
262:       <span class="ruby-keyword kw">next</span> <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">posers</span>.<span class="ruby-identifier">include?</span>(<span class="ruby-identifier">klass</span>)
263: 
264:       <span class="ruby-comment cmt"># node</span>
265:       <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">options</span>.<span class="ruby-identifier">debug</span>
266:         <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot;// #{klass.name}&quot;</span>
267:         <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot; (#{klass.class_name})&quot;</span> <span class="ruby-keyword kw">unless</span> <span class="ruby-identifier">klass</span>.<span class="ruby-identifier">name</span> <span class="ruby-operator">==</span> <span class="ruby-identifier">klass</span>.<span class="ruby-identifier">class_name</span>
268:         <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot;\n&quot;</span>
269:       <span class="ruby-keyword kw">end</span>
270: 
271:       <span class="ruby-identifier">standalone</span> = <span class="ruby-keyword kw">true</span>
272:       <span class="ruby-keyword kw">for</span> <span class="ruby-identifier">a</span> <span class="ruby-keyword kw">in</span> <span class="ruby-identifier">klass</span>.<span class="ruby-identifier">reflect_on_all_associations</span>
273:         <span class="ruby-comment cmt"># edge</span>
274:         <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">options</span>.<span class="ruby-identifier">debug</span>
275:           <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot; //&quot;</span>
276:           <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot; through #{a.through_reflection.class_name}&quot;</span>      <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">through_reflection</span>
277:           <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot; #{a.macro} #{a.class_name}&quot;</span>
278:           <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot; as #{a.options[:as].to_s.camelize.singularize}&quot;</span>  <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">options</span>[<span class="ruby-identifier">:as</span>]
279:           <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot;\n&quot;</span>
280:         <span class="ruby-keyword kw">end</span>
281: 
282:         <span class="ruby-keyword kw">next</span> <span class="ruby-keyword kw">unless</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">class_name</span> <span class="ruby-operator">==</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">name</span>.<span class="ruby-identifier">to_s</span>.<span class="ruby-identifier">camelize</span>.<span class="ruby-identifier">singularize</span>
283: 
284:         <span class="ruby-identifier">opts</span> = { <span class="ruby-value str">'label'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">macro</span>.<span class="ruby-identifier">to_s</span>, <span class="ruby-value str">'arrow'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-constant">ARROW_FOR</span>[<span class="ruby-identifier">a</span>.<span class="ruby-identifier">macro</span>] }
285:         <span class="ruby-identifier">opts</span>.<span class="ruby-identifier">merge!</span>(<span class="ruby-value str">'style'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'dotted'</span>, <span class="ruby-value str">'constraint'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'false'</span>) <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">through_reflection</span>
286:         <span class="ruby-identifier">opts</span>.<span class="ruby-identifier">merge!</span>(<span class="ruby-value str">'style'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'dashed'</span>) <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">options</span>[<span class="ruby-identifier">:as</span>]
287:         <span class="ruby-identifier">opts</span>.<span class="ruby-identifier">merge!</span>(<span class="ruby-value str">'style'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'bold'</span>, <span class="ruby-value str">'color'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'blue'</span>) <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">options</span>[<span class="ruby-identifier">:polymorphic</span>]
288: 
289:         <span class="ruby-identifier">fromnodename</span> = <span class="ruby-identifier">klass</span>.<span class="ruby-identifier">name</span>
290:         <span class="ruby-identifier">tonodename</span> = <span class="ruby-identifier">a</span>.<span class="ruby-identifier">name</span>.<span class="ruby-identifier">to_s</span>.<span class="ruby-identifier">camelize</span>.<span class="ruby-identifier">singularize</span>
291: 
292:         <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">a</span>.<span class="ruby-identifier">macro</span> <span class="ruby-operator">==</span> <span class="ruby-identifier">:has_and_belongs_to_many</span>
293:           <span class="ruby-identifier">tonodename</span> = [<span class="ruby-identifier">fromnodename</span>, <span class="ruby-identifier">tonodename</span>].<span class="ruby-identifier">sort</span>.<span class="ruby-identifier">join</span>(<span class="ruby-value str">'_'</span>)
294:           <span class="ruby-identifier">myopts</span> = <span class="ruby-identifier">opts</span>.<span class="ruby-identifier">merge</span>(<span class="ruby-value str">'arrow'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-constant">ARROW_FOR</span>[<span class="ruby-identifier">:belongs_to</span>])
295:           <span class="ruby-identifier">myopts</span>.<span class="ruby-identifier">merge!</span>(<span class="ruby-value str">'constraint'</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-value str">'false'</span>) <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">tonodename</span> <span class="ruby-operator">&gt;</span> <span class="ruby-identifier">fromnodename</span>
296:           <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">add_node</span>(<span class="ruby-identifier">tonodename</span>, <span class="ruby-value str">%{[shape=diamond, label=&quot;&quot;, height=0.2, width=0.3]}</span>)
297:           <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">add_edge</span>(<span class="ruby-identifier">tonodename</span>, <span class="ruby-identifier">fromnodename</span>, <span class="ruby-identifier">myopts</span>)
298:           <span class="ruby-identifier">standalone</span> = <span class="ruby-keyword kw">false</span>
299:         <span class="ruby-keyword kw">end</span>
300:         <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">klass</span>.<span class="ruby-identifier">name</span> <span class="ruby-operator">==</span> <span class="ruby-identifier">klass</span>.<span class="ruby-identifier">class_name</span>
301:           <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">add_edge</span>(<span class="ruby-identifier">fromnodename</span>, <span class="ruby-identifier">tonodename</span>, <span class="ruby-identifier">opts</span>)
302:           <span class="ruby-identifier">standalone</span> = <span class="ruby-keyword kw">false</span>
303:         <span class="ruby-keyword kw">elsif</span> <span class="ruby-identifier">options</span>.<span class="ruby-identifier">debug</span>
304:           <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-node">&quot; // !! skipping edge #{fromnodename} -&gt; #{tonodename} #{opts.inspect}\n&quot;</span>
305:         <span class="ruby-keyword kw">end</span>
306:       <span class="ruby-keyword kw">end</span>
307:       <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">add_node</span>(<span class="ruby-identifier">klass</span>.<span class="ruby-identifier">name</span>, <span class="ruby-value str">%{[color=red]}</span>) <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">standalone</span>
308:     <span class="ruby-keyword kw">end</span>
309: 
310:     <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">nodes</span> { <span class="ruby-operator">|</span><span class="ruby-identifier">n</span><span class="ruby-operator">|</span> <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-identifier">n</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot;\n&quot;</span> }
311: 
312:     <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">edges</span>(<span class="ruby-identifier">options</span>.<span class="ruby-identifier">to_h</span>) { <span class="ruby-operator">|</span><span class="ruby-identifier">e</span><span class="ruby-operator">|</span> <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-identifier">e</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot;\n&quot;</span> }
313: 
314:     <span class="ruby-identifier">output</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-value str">&quot;}\n&quot;</span>
315: 
316:     <span class="ruby-constant">File</span>.<span class="ruby-identifier">open</span>(<span class="ruby-constant">File</span>.<span class="ruby-identifier">join</span>(<span class="ruby-value str">'tmp'</span>, <span class="ruby-identifier">graph</span>.<span class="ruby-identifier">name</span><span class="ruby-operator">+</span><span class="ruby-value str">'.dot'</span>), <span class="ruby-value str">'w'</span>) <span class="ruby-keyword kw">do</span> <span class="ruby-operator">|</span><span class="ruby-identifier">f</span><span class="ruby-operator">|</span>
317:       <span class="ruby-identifier">f</span>.<span class="ruby-identifier">puts</span> <span class="ruby-identifier">output</span>
318:     <span class="ruby-keyword kw">end</span>
319:   <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>

      <div id="method-M000001" class="method-detail">
        <a name="M000001"></a>

        <div class="method-heading">
          <a href="#M000001" class="method-signature">
          <span class="method-name">posers</span><span class="method-args">()</span>
          </a>
        </div>
      
        <div class="method-description">
          <p>
classes that should not be graphed, but are subclasses of
ActiveRecord::Base
</p>
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000001-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000001-source">
<pre>
     <span class="ruby-comment cmt"># File model_graph.rb, line 181</span>
181:   <span class="ruby-keyword kw">def</span> <span class="ruby-keyword kw">self</span>.<span class="ruby-identifier">posers</span>
182:     [<span class="ruby-constant">CGI</span><span class="ruby-operator">::</span><span class="ruby-constant">Session</span><span class="ruby-operator">::</span><span class="ruby-constant">ActiveRecordStore</span><span class="ruby-operator">::</span><span class="ruby-constant">Session</span>]
183:   <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>


    </div>


  </div>


<div id="validator-badges">
  <p><small><a href="http://validator.w3.org/check/referer">[Validate]</a></small></p>
</div>

</body>
</html>